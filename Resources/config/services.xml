<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="simgroep_concurrent_spider.rabbitmq.connection" class="PhpAmqpLib\Connection\AMQPLazyConnection">
            <argument>%simgroep_concurrent_spider.rabbitmq.host%</argument>
            <argument>%simgroep_concurrent_spider.rabbitmq.port%</argument>
            <argument>%simgroep_concurrent_spider.rabbitmq.user%</argument>
            <argument>%simgroep_concurrent_spider.rabbitmq.password%</argument>
        </service>

        <service id="simgroep_concurrent_spider.start_crawler_command" class="Simgroep\ConcurrentSpiderBundle\Command\StartCrawlerCommand">
            <argument type="service" id="simgroep_concurrent_spider.queue.discovered_urls" />

            <tag name="console.command" />
        </service>

        <service id="simgroep_concurrent_spider.crawl" class="Simgroep\ConcurrentSpiderBundle\Command\CrawlCommand">
            <argument type="service" id="simgroep_concurrent_spider.queue.discovered_urls" />
            <argument type="service" id="simgroep_concurrent_spider.indexer" />
            <argument type="service" id="simgroep_concurrent_spider.spider" />
            <argument>%simgroep_concurrent_spider.http_user_agent%</argument>
            <argument type="expression">
                service(parameter('simgroep_concurrent_spider.logger_service'))
            </argument>

            <tag name="console.command" />
        </service>

        <service id="simgroep_concurrent_spider.recrawl" class="Simgroep\ConcurrentSpiderBundle\Command\RecrawlCommand">
            <argument type="service" id="simgroep_concurrent_spider.queue.recrawl" />
            <argument type="service" id="simgroep_concurrent_spider.indexer" />
            <argument type="expression">
                service(parameter('simgroep_concurrent_spider.logger_service'))
            </argument>

            <tag name="console.command" />
        </service>

        <service id="simgroep_concurrent_spider.index" class="Simgroep\ConcurrentSpiderBundle\Command\IndexCommand">
            <argument type="service" id="simgroep_concurrent_spider.queue.indexer" />
            <argument type="service" id="simgroep_concurrent_spider.indexer" />

            <tag name="console.command" />
        </service>

        <service id="simgroep_concurrent_spider.document_resolver.type_html" class="Simgroep\ConcurrentSpiderBundle\DocumentResolver\Type\Html">
            <argument>%simgroep_concurrent_spider.css_blacklist%</argument>
        </service>

        <service id="simgroep_concurrent_spider.pdf_parser" class="Smalot\PdfParser\Parser" />
        <service id="simgroep_concurrent_spider.document_resolver.type_pdf" class="Simgroep\ConcurrentSpiderBundle\DocumentResolver\Type\Pdf">
            <argument type="service" id="simgroep_concurrent_spider.pdf_parser"></argument>
        </service>

        <service id="simgroep_concurrent_spider.document_resolver.type_msdoc" class="Simgroep\ConcurrentSpiderBundle\DocumentResolver\Type\MsDoc" />

        <service id="simgroep_concurrent_spider.document_resolver.type_word2007" class="Simgroep\ConcurrentSpiderBundle\DocumentResolver\Type\Word2007" />

        <service id="simgroep_concurrent_spider.document_resolver.type_rtf" class="Simgroep\ConcurrentSpiderBundle\DocumentResolver\Type\Rtf" />

        <service id="simgroep_concurrent_spider.document_resolver.type_odt" class="Simgroep\ConcurrentSpiderBundle\DocumentResolver\Type\Odt" />

        <service id="simgroep_concurrent_spider.document_resolver" class="Simgroep\ConcurrentSpiderBundle\DocumentResolver\DocumentResolver">
            <argument type="service" id="simgroep_concurrent_spider.document_resolver.type_html" />
            <argument type="service" id="simgroep_concurrent_spider.document_resolver.type_pdf" />
            <argument type="service" id="simgroep_concurrent_spider.document_resolver.type_msdoc" />
            <argument type="service" id="simgroep_concurrent_spider.document_resolver.type_word2007" />
            <argument type="service" id="simgroep_concurrent_spider.document_resolver.type_rtf" />
            <argument type="service" id="simgroep_concurrent_spider.document_resolver.type_odt" />
        </service>

        <service id="simgroep_concurrent_spider.rabbit_mq_persistence_handler" class="Simgroep\ConcurrentSpiderBundle\PersistenceHandler\RabbitMqPersistenceHandler">
            <argument type="service" id="simgroep_concurrent_spider.queue.indexer" />
            <argument type="service" id="simgroep_concurrent_spider.document_resolver" />
            <argument>%simgroep_concurrent_spider.maximum_resource_size%</argument>
            <argument type="service" id="simgroep_concurrent_spider.event_dispatcher" />
        </service>

        <service id="simgroep_concurrent_spider.queue.discovered_urls" class="Simgroep\ConcurrentSpiderBundle\Queue">
            <argument type="service" id="simgroep_concurrent_spider.rabbitmq.connection" />
            <argument>%simgroep_concurrent_spider.queue.discoveredurls_queue%</argument>
        </service>

        <service id="simgroep_concurrent_spider.queue.indexer" class="Simgroep\ConcurrentSpiderBundle\Queue">
            <argument type="service" id="simgroep_concurrent_spider.rabbitmq.connection" />
            <argument>%simgroep_concurrent_spider.queue.indexer_queue%</argument>
        </service>

        <service id="simgroep_concurrent_spider.queue.recrawl" class="Simgroep\ConcurrentSpiderBundle\Queue">
            <argument type="service" id="simgroep_concurrent_spider.rabbitmq.connection" />
            <argument>%simgroep_concurrent_spider.queue.recrawl_queue%</argument>
        </service>

        <service id="simgroep_concurrent_spider.request_handler" class="VDB\Spider\RequestHandler\GuzzleRequestHandler" />

        <service id="simgroep_concurrent_spider.spider" class="Simgroep\ConcurrentSpiderBundle\Spider">
            <argument type="service" id="simgroep_concurrent_spider.event_dispatcher" />
            <argument type="service" id="simgroep_concurrent_spider.request_handler" />
            <argument type="service" id="simgroep_concurrent_spider.rabbit_mq_persistence_handler" />
        </service>

        <service id="simgroep_concurrent_spider.indexer" class="Simgroep\ConcurrentSpiderBundle\Indexer">
            <argument type="expression">
                service(parameter('simgroep_concurrent_spider.solr_client'))
            </argument>
            <argument>%simgroep_concurrent_spider.mapping%</argument>
            <argument>%simgroep_concurrent_spider.minimal_document_save_amount%</argument>
        </service>

        <service id="simgroep_concurrent_spider.discover_url_listener" class="Simgroep\ConcurrentSpiderBundle\EventListener\DiscoverUrlListener">
            <argument type="service" id="simgroep_concurrent_spider.queue.discovered_urls" />
            <argument type="service" id="simgroep_concurrent_spider.indexer" />
            <argument type="service" id="simgroep_concurrent_spider.event_dispatcher" />

            <tag name="simgroep_concurrent_spider.event_listener" event="spider.crawl.post_discover" method="onDiscoverUrl" />
        </service>

        <service id="simgroep_concurrent_spider.persistence_event_listener" class="Simgroep\ConcurrentSpiderBundle\EventListener\PersistenceEventListener">
            <argument type="service" id="simgroep_concurrent_spider.indexer" />
            <argument>%simgroep_concurrent_spider.minimal_revisit_factor%</argument>
            <argument>%simgroep_concurrent_spider.maximum_revisit_factor%</argument>
            <argument>%simgroep_concurrent_spider.default_revisit_factor%</argument>

            <tag name="simgroep_concurrent_spider.event_listener" event="simgroep_concurrent_spider.pre_persist" method="onPrePersistDocument" />
        </service>
        <service id="simgroep_concurrent_spider.url_blacklisted_listener" class="Simgroep\ConcurrentSpiderBundle\EventListener\UrlBlacklistedListener">
            <argument type="expression">
                service(parameter('simgroep_concurrent_spider.logger_service'))
            </argument>

            <tag name="simgroep_concurrent_spider.event_listener" event="spider.crawl.blacklisted" method="onBlacklisted" />
        </service>

        <service id="simgroep_concurrent_spider.event_dispatcher" class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher">
            <argument type="service" id="service_container" />
        </service>
    </services>
</container>
